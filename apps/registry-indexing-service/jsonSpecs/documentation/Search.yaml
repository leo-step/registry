openapi: 3.0.0
info:
  title: protocol api specification
  description: transaction lifecycle specification
  version: 0.0.0
  contact:
    email: engineering@noshdelivery.io
security:
  - NodeAuth: []
paths:
  /search:
    post:
      summary: Search
      tags:
        - Provider Supporting Node (PSN)
        - Gateway Provider (GP)
      description: The <code>BSN</code> broadcasts the buyer's request for goods and services
      requestBody:
        $ref: '#/components/requestBodies/Search'
      responses:
        default:
          $ref: '#/components/responses/PSNResponse'
  /on_search:
    post:
      summary: On Search Callback
      tags:
        - Buyer Supporting Node (BSN)
        - Gateway Provider (GP)
      description: The <code>BSN</code> responds the buyer's request for goods and services with a provider list.
      requestBody:
        $ref: '#/components/requestBodies/OnSearch'
      responses:
        default:
          $ref: '#/components/responses/BSNResponse'
  /select:
    post:
      summary: Select Item
      tags:
        - Provider Supporting Node (PSN)
      description: The <code>Buyer</code> selects items from the catalog
      requestBody:
        $ref: '#/components/requestBodies/Select'
      responses:
        default:
          $ref: '#/components/responses/PSNResponse'
  /on_select:
    post:
      summary: On Select Callback
      tags:
        - Buyer Supporting Node (BSN)
      description: The <code>Buyer</code> selects items from the catalog
      requestBody:
        $ref: '#/components/requestBodies/OnSelect'
      responses:
        default:
          $ref: '#/components/responses/BSNResponse'
  /init:
    post:
      summary: The Buyer Initializes a Cart by providing fulfillment and contact information
      tags:
        - Provider Supporting Node (PSN)
      description: The <code>Buyer</code> initializes their order by providing personal information and fulfillment details
      requestBody:
        $ref: '#/components/requestBodies/Init'
      responses:
        default:
          $ref: '#/components/responses/PSNResponse'
  /on_init:
    post:
      summary: 'OnInit Callback, includes the latest cart and the refund, cancellation, payment, and fulfillment terms of the <code>PSN</code>'
      tags:
        - Buyer Supporting Node (BSN)
      description: 'The <code>PSN</code> responds to an initialized cart with full payment terms, refund terms, cancellation terms, etc. Typically this callback provides data for the <code>Buyer</code> in a checkout screen in a client application'
      requestBody:
        $ref: '#/components/requestBodies/OnInit'
      responses:
        default:
          $ref: '#/components/responses/BSNResponse'
  /status:
    post:
      summary: The BSN attempts to get the status of an Order
      tags:
        - Provider Supporting Node (PSN)
      description: The <code>Buyer</code> checks for the status of an order from the <code>PSN</code>
      requestBody:
        $ref: '#/components/requestBodies/Status'
      responses:
        default:
          $ref: '#/components/responses/PSNResponse'
  /on_status:
    post:
      summary: 'OnStatus Callback, the <code>PSN</code> responds with the most recent Order'
      tags:
        - Buyer Supporting Node (BSN)
      description: The <code>PSN</code> responds with the Order object
      requestBody:
        $ref: '#/components/requestBodies/OnStatus'
      responses:
        default:
          $ref: '#/components/responses/BSNResponse'
  /cancel:
    post:
      summary: The BSN attempts to cancel an Order
      tags:
        - Provider Supporting Node (PSN)
      description: The <code>Buyer</code> checks for the status of an order from the <code>PSN</code>
      requestBody:
        description: A <code>Buyer</code>'s request to cancel an Order
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  enum:
                    - CANCEL
                callback_reference:
                  description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                  type: object
                  properties:
                    transaction_id:
                      description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                      type: string
                    message_id:
                      description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                      type: string
                  required:
                    - transaction_id
                    - message_id
                bsn_parameters:
                  type: object
                  properties:
                    uid:
                      $ref: '#/components/schemas/Node/properties/uid'
                    name:
                      $ref: '#/components/schemas/Node/properties/name'
                    callback_url:
                      $ref: '#/components/schemas/Node/properties/callback_url'
                  required:
                    - uid
                    - name
                    - callback_url
                message:
                  type: object
                  properties:
                    order_id:
                      $ref: '#/components/schemas/Order/properties/id'
                    reason:
                      description: The reason for cancellation
                      type: string
                    additional_description:
                      description: Additional information regarding the cancellation event
                      $ref: '#/components/schemas/Descriptor'
                  required:
                    - order_id
                    - reason
              required:
                - action
                - message
                - callback_reference
                - bsn_parameters
      responses:
        default:
          $ref: '#/components/responses/PSNResponse'
  /on_cancel:
    post:
      summary: 'OnCancel Callback, the <code>PSN</code> responds with the most recent Order'
      tags:
        - Buyer Supporting Node (BSN)
      description: The <code>PSN</code> responds with the Order object
      requestBody:
        $ref: '#/components/requestBodies/OnCancel'
      responses:
        default:
          $ref: '#/components/responses/BSNResponse'
components:
  securitySchemes:
    NodeAuth:
      type: apiKey
      in: header
      name: Signature
      description: |
        This header authenticates requests using a digital signature. The format for the `Authorization` header is as follows:
        `Signature keyId="{registry_node_uid}",algorithm="ecdsa-p256-keccak256",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64url(secp256k1(signing string))"`
        Where: - `registry_node_uid` The unique registry identifier of the sending node - `algorithm` specifies the cryptographic algorithm used, here "ecdsa-p256-keccak256". - `created` is the UNIX timestamp when the signature was created. - `expires` is the UNIX timestamp when the signature expires. - `headers` details the parts of the request that are signed, specifically the creation time, expiration time, and the digest. - `signature` is the digital signature, encoded in Base64url, created by signing the requestBody with the node's private key using the secp256k1 curve.
  schemas:
    Location:
      title: Location
      description: provides details about a physical location
      type: object
      properties:
        addressLine1:
          description: 'Fields that start with address_line provide the address''s most specific details, like street number, street name, and building name. They do not provide less specific details like city, state/province, or country (these details are provided in other fields).'
          type: string
        addressLine2:
          description: 'The second line of the address, if any.'
          type: string
        locality:
          description: The city or town of the address
          type: string
        sublocality:
          description: 'A civil region within the address''s locality, if any.'
          type: string
        sublocality2:
          description: 'A civil region within the address''s sublocality, if any.'
          type: string
        sublocality3:
          description: 'A civil region within the address''s sublocality2, if any.'
          type: string
        administrativeDistrictLevel1:
          description: 'A civil entity within the address''s country. In the US, this is the state.'
          type: string
        administrativeDistrictLevel2:
          description: 'A civil entity within the address''s administrative_district_level_1. In the US, this is the county.'
          type: string
        administrativeDistrictLevel3:
          description: 'A civil entity within the address''s administrative_district_level_2, if any.'
          type: string
        postalCode:
          description: The address's postal code. For a full list of field meanings by country.
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
    Descriptor:
      description: 'Comprehensive description of something, accommodating a broad spectrum of attributes, physical or otherwise.'
      type: object
      properties:
        name:
          type: string
          description: Name of the item or entity.
        identifier:
          type: string
          description: 'A unique identifier, which could be a code or a system-specific ID.'
        shortDescription:
          type: string
          description: A brief description or summary.
        detailedDescription:
          type: string
          description: An extended description providing more in-depth details.
        attributes:
          type: array
          description: A collection of key-value pairs for additional attributes that do not fit into the standard schema.
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        media:
          type: array
          description: 'A collection of media files related to the item, such as documents, audio, or video files.'
          items:
            $ref: '#/components/schemas/MediaFile'
        images:
          type: array
          description: A collection of image files associated with the item.
          items:
            $ref: '#/components/schemas/ImageFile'
        links:
          type: array
          description: 'Web links, including social media, official websites, or additional resources.'
          items:
            type: object
            properties:
              description:
                type: string
              url:
                type: string
                format: uri
        tags:
          type: array
          description: Tags or keywords associated with the item for easier categorization and search.
          items:
            type: string
    Cancellation:
      description: Describes a cancellation of an order
      type: object
      properties:
        time:
          description: Date-time when the order was cancelled by the buyer
          type: string
          format: date-time
        cancelled_by:
          type: string
          enum:
            - BUYER
            - PROVIDER
        reason:
          description: The reason for cancellation
          type: string
        additional_description:
          description: Additional information regarding the cancellation event
          allOf:
            - $ref: '#/components/schemas/Descriptor'
    Fulfillment:
      description: Describes how a an order will be fulfilled to the Buyer
      type: object
      properties:
        id:
          description: Unique reference ID to the fulfillment of an order
          type: string
        mode:
          description: A code that describes the mode of fulfillment.
          $ref: '#/components/schemas/FulfillmentMode'
        status:
          description: The current state of fulfillment. The BPP must set this value whenever the state of the order fulfillment changes and fire an unsolicited `on_status` call.
          allOf:
            - $ref: '#/components/schemas/FulfillmentStatus'
        expected_fulfillment_time:
          description: the expected fulfillment time of the Order in the local time of the Buyer.
          type: integer
          format: date-time
        tracking_details:
          $ref: '#/components/schemas/Tracking'
        agent:
          description: The agent that is currently handling the fulfillment of the order
          allOf:
            - $ref: '#/components/schemas/Agent'
        contact:
          $ref: '#/components/schemas/Contact'
        delivery_waypoints:
          description: The list of logical stops during the fulfillment of an order.
          type: array
          items:
            $ref: '#/components/schemas/Location'
    Contact:
      title: Contact information
      description: Describes the contact information of an entity
      type: object
      properties:
        cell_phone_number:
          description: A publicly listed cell phone number for the merchant.
          $ref: '#/components/schemas/CellPhone'
        email_address:
          description: The email address associated with the customer profile.
          type: string
    Tracking:
      description: Contains tracking information about tracking details related to an Order
      type: object
      properties:
        id:
          description: A unique tracking reference number
          type: string
        url:
          description: A URL to a tracking endpoint
          type: string
          format: uri
        location:
          description: 'If the url does not provide realtime tracking information, this value can contain the location of the agent fulfilling the order.'
          allOf:
            - $ref: '#/components/schemas/Location'
        status:
          description: 'This value indicates if the tracking is currently active or not. If this value is `active`, then the BAP can begin tracking the order. If this value is `inactive`, the tracking URL is considered to be expired and the BAP should stop tracking the order.'
          type: string
          enum:
            - ACTIVE
            - COMPLETE
    Decimal: !<tag:yaml.org,2002:js/undefined> ''
    Value:
      description: Describes a value
      type: object
      properties:
        type:
          type: string
          enum:
            - CONSTANT
            - VARIABLE
        value:
          $ref: '#/components/schemas/Decimal'
        estimated_value:
          $ref: '#/components/schemas/Decimal'
        computed_value:
          $ref: '#/components/schemas/Decimal'
        range:
          type: object
          properties:
            min:
              $ref: '#/components/schemas/Decimal'
            max:
              $ref: '#/components/schemas/Decimal'
        unit:
          type: string
    Ack:
      description: 'Describes the acknowledgement sent in response to an API call. If the implementation utilizes HTTP/S, then Acknowledgment must be returned in the same session. Every API call to a Provider Supporting Node must be responded to with an Acknowledgment whether the Provider Supporting Node intends to respond with a callback or not. This has one property named `status` that indicates the status of the Acknowledgment.'
      type: object
      properties:
        status:
          type: string
          description: 'The status of the acknowledgment. If the request meets the validation criteria of the Provider Supporting Node, then this is set to ACK. If a Provider Supporting Node responds with status = `ACK` to a request, it is obligated to respond with a callback. If the request does not meet the validation criteria, then this is set to NACK. Additionally, if a Provider Supporting Node does not intend to respond with a callback even after the request meets the validation criteria, it should set this value to `NACK`.'
          enum:
            - ACK
            - NACK
    Error:
      title: Error
      type: object
      required:
        - display_message
        - error_code
      properties:
        display_message:
          description: A human readable error message
          type: string
        error_code:
          description: A specific error code
          type: string
          enum:
            - INTERNAL_SERVER_ERROR
            - UNAUTHORIZED
            - CERTIFICATE_EXPIRED
            - FORBIDDEN
            - BAD_REQUEST
            - INCORRECT_TYPE
            - INVALID_PAGINATION_ARGUMENTS
            - MISSING_REQUIRED_PARAMETER
            - UNKNOWN_QUERY_PARAMETER
            - VALUE_REGEX_MISMATCH
            - VALUE_TOO_SHORT
            - VALUE_TOO_LONG
            - VALUE_TOO_LOW
            - VALUE_TOO_HIGH
            - VALUE_EMPTY
            - INVALID_CONTENT_TYPE
            - BLOCKED_BY_SERVER
        field:
          description: The name of the field provided in the original request (if any) that the error pertains to.
          type: string
    LanguageCode:
      title: Language Code
      type: string
      description: 'The code indicating a language preference, in [BCP 47 format](https://tools.ietf.org/html/bcp47#appendix-A). For example, en-US or fr-CA.'
      enum:
        - en-US
    CurrencyCode:
      title: Currency Code
      type: string
      description: 'A currency code in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) format. For example, the currency code for US dollars is USD.'
      enum:
        - USD
    CountryCode:
      title: Country Code
      type: string
      description: 'A country code, in the two-letter format of [ISO 3166](https://www.iso.org/iso-3166-country-codes.html). For example, US or JP.'
      enum:
        - US
    Coordinates:
      description: Defines a latitudinal and longitudinal point in space
      type: object
      properties:
        latitude:
          type: number
          format: double
          description: The latitude coordinate.
        longitude:
          type: number
          format: double
          description: The longitude coordinate
    H3Array:
      title: H3 Array
      description: An array of H3 geospatial indices
      type: array
      items:
        type: string
        description: An H3 index represented as a 15-character hexadecimal string.
    NetworkRole:
      title: Network Role
      description: The role of node in the network
      type: string
      enum:
        - BSN
        - PSN
        - GP
    Money:
      title: Money
      description: 'A price associated with a product, service, or fulfillment method, or other charge associated with a transaction'
      type: object
      properties:
        amount:
          description: 'The amount of money, in the smallest denomination of the currency indicated by currency. For example, when currency is USD, amount is in cents. Monetary amounts can be positive or negative. See the specific field description to determine the meaning of the sign in a particular case.'
          type: integer
          format: int64
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
    Fee:
      title: Fee
      type: object
      description: The costs that a <code>Buyer</code> will pay at checkout.
      properties:
        title:
          description: A human-readable title for the fee. Useful to display in a Receipt or similar interface on a mobile or web client.
          type: string
        description:
          description: A human-readable description of the fee associated with this <code>CartFee</code>
          type: string
        amount:
          description: The chargeable amount of this <code>Fee</code>
          type: string
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
      required:
        - title
        - description
        - amount
    MerchantCategoryCode:
      title: Merchant Category Code
      description: 'A four-digit number that describes the kind of goods or services sold by the provider. The [merchant category code (MCC)](https://www.iso.org/standard/33365.html) of the merchant is standardized by ISO 18245. For example, 5045, for a location that sells computer goods and software. <ul> <li>[USDA MCC directory](https://www.dm.usda.gov/procurement/card/card_x/mcc.pdf)</li> <li>[Visa Merchant Data Standards Manual](https://usa.visa.com/content/dam/VCOM/download/merchants/visa-merchant-data-standards-manual.pdf)</li> <li>[Citibank MCC list](https://www.citibank.com/tts/solutions/commercial-cards/assets/docs/govt/Merchant-Category-Codes.pdf)</li> </ul>'
      type: string
      minLength: 4
      maxLength: 4
    CellPhone:
      title: Cell Phone
      description: 'an object representing an [E.164](https://en.wikipedia.org/wiki/E.164) formatted cell phone number'
      properties:
        country_phone_code:
          description: 'The country phone code in E.164 format (e.g., +1 for the United States).'
          type: string
          pattern: ^\+\d+$
        cell_phone_number:
          description: The local cell phone number.
          type: string
          pattern: ^\d+$
        extension:
          description: An optional extension or additional digits (if applicable).
          type: string
          pattern: ^\d*$
      required:
        - country_phone_code
        - cell_phone_number
      additionalProperties: false
    Url:
      title: URL
      type: string
      description: 'Represents an RFC 3986-compliant URI string, limited to HTTPS protocol.'
      pattern: '^https:\/\/[^\s/$.?#].[^\s]*$'
    ImageFile:
      title: Image File
      description: Defines an image that can be affiliated with an entity or object
      type: object
      properties:
        image_url:
          $ref: '#/components/schemas/Url'
        width:
          description: Width of the image in pixels
          type: string
        height:
          description: Height of the image in pixels
          type: string
    MediaFile:
      description: This object contains a url to a media file.
      type: object
      properties:
        mimetype:
          description: 'indicates the nature and format of the document, file, or assortment of bytes. MIME types are defined and standardized in IETF''s RFC 6838'
          type: string
        url:
          description: The URL of the file
          $ref: '#/components/schemas/Url'
    FulfillmentStage:
      title: Fulfillment Stage
      description: Defines the status of an order
      type: string
      enum:
        - PRE-ORDER
        - AT-CHECKOUT
        - PRE-FULFILLMENT
        - ON-FULFILLMENT
        - POST-FULFILLMENT
    FulfillmentMode:
      title: Fulfillment Mode
      description: Defines a method for acquiring a product or service
      type: string
      enum:
        - LOCAL-PICKUP
        - LOCAL-DELIVERY
        - SHIPMENT
        - APPOINTMENT
    FulfillmentStatus:
      title: Fulfillment Status
      description: Defines the status of an order
      type: string
      enum:
        - PENDING
        - CONFIRMED_BY_PROVIDER
        - DECLINED_BY_PROVIDER
        - IN_PROGRESS
        - COMPLETED_BY_PROVIDER
        - SCHEDULED_BY_PROVIDER
    ItemType:
      title: Item Type
      description: The available <code>Item</code> types. Defined by global network policies.
      type: string
      enum:
        - ALCOHOL
        - FOOD
        - REGULAR
        - SCHEDULED_SERVICE (e.g. a lawn service or delivery service)
        - ON_DEMAND_SERVICE (e.g. on-demand delivery)
    OrderStatus:
      title: Order Status
      description: Status of the order. Allowed values can be defined by the network policy
      type: string
      enum:
        - SCHEDULED
        - NEW_ORDER
        - CONFIRMED
        - PICKED_UP
        - CANCELED
        - FULFILLED
        - PREPARED
        - REJECTED
        - FAILED_TO_CREATE
        - UNKNOWN
    Catalog:
      title: Catalog
      description: Defines a specific collection of <code>CatalogItem</code>'s available for purchase
      type: object
      properties:
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        schedules:
          description: Defines the availability of the items within this catalog
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
        catalog_categories:
          description: <code>CatalogCategory</code> items affiliated with this catalog
          type: array
          items:
            $ref: '#/components/schemas/CatalogCategory'
        catalog_items:
          description: all <code>CatalogItem</code>'s in this catalog
          type: array
          items:
            $ref: '#/components/schemas/CatalogItem'
        catalog_modifier_groups:
          description: all <code>CatalogModifierGroup</code>'s' in this catalog
          type: array
          items:
            $ref: '#/components/schemas/CatalogModifierGroup'
        catalog_item_modifiers:
          description: all <code>CatalogItemModifier</code>'s in this catalog
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemModifier'
    CatalogCategory:
      title: Catalog Category
      description: A category to which a <code>CatalogItem</code> instance belongs. Used to group items for ease in exlporations.
      type: object
      properties:
        id:
          description: A unique identifier for this <code>CatalogCategory</code>
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        item_ids:
          description: A list of <code>CatalogItem</code>'s affiliated with this category
          type: array
          items:
            $ref: '#/components/schemas/CatalogItem/properties/id'
        ordinal:
          description: Determines the PSNs intended position of this <code>CatalogCategory></code> appears in the <code>Catalog</code>
          type: integer
          format: int32
    CatalogItem:
      title: Catalog Item
      description: An item in the catalog of a <code>Provider</code>
      type: object
      properties:
        id:
          description: A unique identifier for this <code>CatalogItem</code>
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        item_type:
          $ref: '#/components/schemas/ItemType'
        item_price:
          $ref: '#/components/schemas/Money'
        ordinal:
          description: Determines the position of this <code>CatalogItem></code> in the <code>Category</code>
          type: integer
          format: int32
        inventory_status:
          description: Represents whether this item is currently for sale. <code>Low Quantity</code> is calculated and defined by the <code>Provider Supporting Node (PSN)</code>.
          type: object
          enum:
            - FOR_SALE
            - NOT_FOR_SALE
            - LOW_QUANTITY
        preparation_time:
          $ref: '#/components/schemas/Value'
        supported_fulfillment_modes:
          type: array
          items: null
          $ref: '#/components/schemas/FulfillmentMode'
        modifier_group_ids:
          type: array
          items:
            $ref: '#/components/schemas/CatalogModifierGroup/properties/id'
    CatalogModifierGroup:
      title: Catalog Modifier Group
      description: A modifier group that contains <code>Modifier</code>'s' to handle specifications related to <code>CatalogItem</code>'s.
      type: object
      properties:
        id:
          description: A unique identifier for this <code>CatalogModifierGroup</code>
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        minimum_selection_requirement:
          description: The minimum number of <CatalogItemModifier>'s selections to satisfy
          type: integer
          default: 1
          format: int32
        maximum_selection_requirement:
          description: The minimum number of <CatalogItemModifier>'s selections to satisfy
          type: integer
          default: 1
          format: int32
        max_per_modifier_selection_quantity:
          description: 'Maximum number of selections customers can make for each modifier item in this ModifierGroup. 0 means there is no limit to how many times they can select a single modifier item. If not specified, a value of 1 will be used as the default value.'
          type: integer
          default: 1
          format: int32
        modifier_item_ids:
          description: A list of <code>CatalogItem</code>'s listed under this modifier group. Modifier Items are represented as Catalog Items.
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemModifier/properties/id'
    CatalogItemModifier:
      title: Catalog Item Modifier
      description: An modifier to a <code>CatalogItem</code>
      type: object
      properties:
        id:
          description: A unique identifier for this <code>CatalogItemModifier</code>
          type: string
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        price:
          $ref: '#/components/schemas/Money'
        ordinal:
          description: Determines where this <code>CatalogItemModifier></code> appears in a <code>CatalogModifierGroup</code>
          type: integer
          format: int32
        inventory_status:
          description: Represents whether this item is currently for sale. <code>Low Quanttiy</code> is calculated and defined by the <code>Seller Supporting Node (SSN)</code>.
          type: object
          enum:
            - FOR_SALE
            - NOT_FOR_SALE
            - LOW_QUANTITY
        supported_fulfillment_modes:
          type: array
          items: null
          $ref: '#/components/schemas/FulfillmentMode'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageFile'
        featured_image:
          description: 'Functionally equivalent to <code>descriptor.images(first:1)</code>'
          $ref: '#/components/schemas/ImageFile'
    ItemQuantity:
      description: Describes the count or amount of an item
      type: object
      properties:
        available:
          description: This represents the exact quantity available for purchase of the item. The buyer can only purchase multiples of this
          type: object
          properties:
            count:
              type: integer
              minimum: 0
            measure:
              $ref: '#/components/schemas/Value'
        selected:
          description: This represents the quantity selected for purchase of the item
          type: object
          properties:
            count:
              type: integer
              minimum: 0
            measure:
              $ref: '#/components/schemas/Value'
    Order:
      title: Order
      type: object
      description: Describes a purchase order. It contains the complete details of the order between the buyer and the provider.
      properties:
        id:
          type: string
          description: A globally unique ID of the <code>Order</code>
        created_at:
          description: The date-time of creation of this order
          type: string
          format: date-time
        updated_at:
          description: The date-time of updated of this order
          type: string
          format: date-time
        cost:
          description: The final cost object.
          $ref: '#/components/schemas/Cost'
        cart_line_items:
          description: An array of selected <code>CartLineItem</code>s in this order.
          type: array
          items:
            $ref: '#/components/schemas/CartLineItem'
        status:
          description: Status of the order.
          $ref: '#/components/schemas/OrderStatus'
        provider:
          description: the provider fulfilling this order.
          $ref: '#/components/schemas/Provider'
        order_notes:
          description: 'special instructions needed to fulfill this order. For example, a note for a merchant from a buyer about a specific request with their order.'
          type: string
        terms:
          description: 'the contractual terms of this order when a Cart was confirmed, cancellation, payment, and fulfillment terms of this order'
          $ref: '#/components/schemas/Terms'
        cancellation:
          description: details of this orders cancellation
          $ref: '#/components/schemas/Cancellation'
      required:
        - id
        - created_at
        - updated_at
        - cost
        - cart_line_items
        - status
        - provider
        - terms
        - fulfillment_details
    Cost:
      title: Costs
      type: object
      description: The costs that a <code>Buyer</code> will pay at checkout.
      properties:
        subtotal_amount:
          description: 'The amount, before taxes and cart-level discounts, for the buyer to pay.'
          $ref: '#/components/schemas/Money'
        total_amount:
          description: Defines the total amount for the customer to pay.
          $ref: '#/components/schemas/Money'
        total_fees_amount:
          description: Defines the total amount for the customer to pay.
          $ref: '#/components/schemas/Money'
        fees:
          description: 'An array of fees associated with the <code>Cart</code>, the sum of <code>CartFee</code> amounts must equal the totalFeesAmount value.'
          type: array
          items:
            $ref: '#/components/schemas/Fee'
      required:
        - subtotal_amount
        - total_amount
        - total_fees_amount
        - cart_fees
    Buyer:
      title: Buyer
      description: 'Defines details about a buyer, such as contact details. This information is sent from a Buyer Supporting Node (BSN) to a Seller Supporting Node (SSN) during a customers payment intent.'
      type: object
      properties:
        id:
          type: string
          description: A globally unique ID of the customer in the Seller Supporting Node's (SSN) system
        first_name:
          type: string
          description: The first name of the customer
          maxLength: 100
        last_name:
          type: string
          description: The last name of the customer
          maxLength: 100
        default_address:
          $ref: '#/components/schemas/Location'
        contact_information:
          $ref: '#/components/schemas/Contact'
      required:
        - id
        - first_name
        - last_name
        - default_address
        - contact_information
    Provider:
      title: Provider
      type: object
      description: Defines details about a provider and specifies information that a Buyer Supporting Node (BSN) can display to it's users.
      properties:
        id:
          type: string
          description: 'A globally unique ID of the provider in the Provider Supporting Node''s (PSN) system. Can be used to query the specific provider for detailed information in another, directed search request.'
        descriptor:
          $ref: '#/components/schemas/Descriptor'
        location:
          description: 'the physical location of the provider, if the provider has a specific location'
          $ref: '#/components/schemas/Location'
        supported_merchant_category_codes:
          description: 'Array of category codes, each adhering to the MerchantCategoryCode schema'
          type: array
          items:
            $ref: '#/components/schemas/MerchantCategoryCode'
        supported_fulfillment_modes:
          description: 'Array of fulfillment modes supported by this provider, each adhering to the FulfillmentMode schema'
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentMode'
        country_code:
          $ref: '#/components/schemas/CountryCode'
        language_code:
          $ref: '#/components/schemas/LanguageCode'
        currency_code:
          $ref: '#/components/schemas/CurrencyCode'
        catalogs:
          description: 'The catalogs for this provider. If empty, the PSN did not return catalogs for the initial search.'
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        operational_status:
          description: Defines the operational state of a business at the time of the request and is calculated by the SSN as a reference to the composite of Menu Schedules
          type: string
          enum:
            - OPEN
            - CLOSED
            - CLOSING_SOON
    Node:
      title: Node
      description: A structure representing a node entry in the network's registry
      type: object
      properties:
        uid:
          type: string
          description: 'Unique identifier of the node in the registry, represented as a 32-byte hexadecimal string'
          pattern: '^[0-9a-fA-F]{64}$'
        name:
          type: string
          description: Name of the node
        callback_url:
          description: The publicly hosted url of the node's protocol server.
          $ref: '#/components/schemas/Url'
        serviceable_region:
          $ref: '#/components/schemas/H3Array'
        industry_code:
          type: string
          description: Industry code relevant to the node.
        node_type:
          $ref: '#/components/schemas/NetworkRole'
    Person:
      description: Describes a person as any individual
      type: object
      properties:
        id:
          type: string
          description: Describes the identity of the person
        name:
          description: the name of the person
          type: string
        image:
          description: image of the person
          $ref: '#/components/schemas/ImageFile'
        dob:
          description: Date of birth of the person
          type: string
          format: date
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageCode'
    Agent:
      description: 'Describes the direct performer, driver or executor that fulfills an order. It is usually a person. But in some rare cases, it could be a non-living entity like a drone, or a bot. Some examples of agents are Doctor in the healthcare sector, a driver in the mobility sector, or a delivery person in the logistics sector. This object can be set at any stage of the order lifecycle. This can be set at the discovery stage when the BPP wants to provide details on the agent fulfilling the order, like in healthcare, where the doctor''s name appears during search. This object can also used to search for a particular person that the customer wants fulfilling an order. Sometimes, this object gets instantiated after the order is confirmed, like in the case of on-demand taxis, where the driver is assigned after the user confirms the ride.'
      properties:
        person:
          $ref: '#/components/schemas/Person'
        contact:
          $ref: '#/components/schemas/Contact'
        organization:
          $ref: '#/components/schemas/Organization'
    Organization:
      description: An organization. Usually a business entity like an LLC.
      type: object
      properties:
        name:
          description: the name of the person
          type: string
        image:
          description: image of the person
          $ref: '#/components/schemas/ImageFile'
        location:
          description: The postal address of the organization
          allOf:
            - $ref: '#/components/schemas/Location'
        contact:
          $ref: '#/components/schemas/Contact'
    Cart:
      title: Cart
      type: object
      description: Describes the current details of a <code>Buyer</code>'s selection during their transaction lifecycle.
      properties:
        id:
          type: string
          description: A globally unique ID of the <code>Cart</code>
        created_at:
          description: The date-time of creation of this cart
          type: string
          format: date-time
        updated_at:
          description: The date-time of updated of this cart
          type: string
          format: date-time
        provider:
          description: the provider for this cart
          $ref: '#/components/schemas/Provider'
        cost:
          description: 'The estimated costs that will be charged to the Buyer. If the order has not been initialized, the costs are subject to change. The PaymentTerm returned when the cart is initialized represents when the cost object can no longer be modified.'
          $ref: '#/components/schemas/Cost'
        cart_line_items:
          description: An array of currently selected <code>CatalogItem</code>s in this order.
          type: array
          items:
            $ref: '#/components/schemas/CartLineItem'
        order_notes:
          description: 'special instructions needed to fulfill this order. For example, a note for a merchant from a buyer about a specific request with their order.'
          type: string
      required:
        - id
        - cost
        - cart_line_items
    CartLineItem:
      title: 'A CatalogItem selected by a Buyer, in the cart returned by the OnSelect Callback'
      description: An single <CatalogItem> reference with a quantity and the <code>Buyer</code>s <code>CatalogItemModifier</code> selections.
      type: object
      properties:
        id:
          description: a globally unique identifier for this specific customer's Catalog selections in a <code>Cart</code>
          type: string
        catalog_item_id:
          description: The identifier of the <code>CatalogItem</code> from the <code>Catalog</code> in the <code>SSN</code> server
          $ref: '#/components/schemas/CatalogItem/properties/id'
        quantity:
          type: integer
          format: int32
        cart_line_item_modifiers:
          type: array
          items:
            $ref: '#/components/schemas/CartLineItemModifier'
        special_instructions:
          description: 'represents a specific, item level note. Typically used by a Merchant to fulfill a specific request form the Buyer that is not satisified within the core CatalogItem specificaiton.'
          type: string
        item_price:
          $ref: '#/components/schemas/Money'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageFile'
        featured_image:
          description: 'Functionally equivalent to <code>descriptor.images(first:1)</code>'
          $ref: '#/components/schemas/ImageFile'
      required:
        - id
        - catalog_item_id
        - quantity
        - price
    CartLineItemModifier:
      title: A Modifier selected for a CatalogItem by a Buyer. This data is represented in the Cart returned by the OnSelect Callback
      description: An single <CatalogItem> reference with a quantity and the <code>Buyer</code>s <code>CatalogItemModifier</code> selections.
      type: object
      properties:
        id:
          description: a globally unique identifier for this specific customer's Catalog selections in a <code>Cart</code>
          type: string
        catalog_modfifier_item_id:
          description: The identifier of the <code>CatalogItem</code> from the <code>Catalog</code> in the <code>SSN</code> server
          $ref: '#/components/schemas/CatalogItemModifier/properties/id'
        quantity:
          type: integer
          format: int32
        item_price:
          $ref: '#/components/schemas/Money'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageFile'
        featured_image:
          description: 'Functionally equivalent to <code>descriptor.images(first:1)</code>'
          $ref: '#/components/schemas/ImageFile'
      required:
        - id
        - catalog_modfifier_item_id
        - quantity
        - price
    PaymentTerm:
      title: Payment Term
      description: Defines payment settlement term between the Buyer Supporting Node (BSN) and the Provider Supporting Node (PSN)
      type: object
      properties:
        charged_at:
          description: The stage of an Order when the payment is to be processed.
          $ref: '#/components/schemas/FulfillmentStage'
        processed_at:
          description: The stage of an Order when the payment is to be processed.
          $ref: '#/components/schemas/FulfillmentStage'
        transaction_id:
          description: A globally unique reference identifier associated with this transaction
      required:
        - charged_at
        - processed_at
        - transaction_id
    CancellationTerm:
      title: Cancellation Term
      description: Describes the cancellation terms of an order.
      type: object
      properties:
        fulfillment_stage:
          description: The stage of fulfillment during which this term is applicable.
          $ref: '#/components/schemas/FulfillmentStage'
        reason_required:
          description: Indicates whether a reason is required to cancel the order
          type: boolean
        cancellation_fee:
          $ref: '#/components/schemas/Fee'
    RefundTerm:
      title: Refund Term
      description: Defines the refund term of an order.
      type: object
      properties:
        fulfillment_stage:
          description: The stage of fulfillment during which this term is applicable.
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentStage'
        refund_eligible:
          description: Indicates if a cancellation will result in a refund
          type: boolean
    FulfillmentTerm:
      title: Fulfillment Term
      type: object
      description: 'The terms for fulfilling this order. Typically, this is used when the order is still open and not yet confirmed.'
      properties:
        selected_fulfillment_mode:
          description: The currently selected fulfillment mode for this cart
          $ref: '#/components/schemas/FulfillmentMode'
        provider_details:
          $ref: '#/components/schemas/Provider'
        buyer_details:
          description: The location of the buyer
          $ref: '#/components/schemas/Buyer'
        fulfillment_time:
          description: a date-time specifying when this order should be fulfilled.
          format: date-time
      required:
        - available_fulfillment_modes
        - selected_fulfillment_modes
        - provider_details
        - buyer_details
    Terms:
      title: Terms
      description: Transactional terms as defined by the Provider Supporting Node (PSN)
      type: object
      properties:
        id:
          description: 'a unique identifer for the <code>PSN</code> terms. Terms are returned during search, and when <code>Cart</code>''s are modified. The <code>BSN</code> uses this identifier when establishing a payment intent with an <code>PSN</code>'
          type: string
        payment_term:
          $ref: '#/components/schemas/PaymentTerm'
        cancellation_term:
          $ref: '#/components/schemas/CancellationTerm'
        refund_term:
          $ref: '#/components/schemas/RefundTerm'
        fulfillment_term:
          $ref: '#/components/schemas/FulfillmentTerm'
    TimeRange:
      description: Time Range
      type: object
      properties:
        range:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
    Schedule:
      title: Schedule
      description: |
        Defines a range of date times in local time for a specific day when products or services are available to purchase.
      type: object
      properties:
        day:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        available_hours:
          description: Defines an array of time intervals for the availability of products or services.
          type: array
          items:
            type: object
            properties:
              open:
                type: object
                description: Opening time in local time.
                properties:
                  hour:
                    type: integer
                    format: int32
                    description: Opening hour in local time.
                    minimum: 0
                    maximum: 23
                  minute:
                    type: integer
                    format: int32
                    description: Opening minute in local time.
                    minimum: 0
                    maximum: 59
              close:
                type: object
                description: Closing time in local time.
                properties:
                  hour:
                    type: integer
                    format: int32
                    description: Closing hour in local time.
                    minimum: 0
                    maximum: 23
                  minute:
                    type: integer
                    format: int32
                    description: Closing minute in local time.
                    minimum: 0
                    maximum: 59
  requestBodies:
    Search:
      description: a Buyer's search request
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - SEARCH
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              bsn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  intent:
                    description: A Buyers search intent to purchase or avail items from the network.
                    type: object
                    properties:
                      search_string:
                        description: A raw free text search string describing the name or description of a seller.
                        type: string
                      fulfillment:
                        type: object
                        properties:
                          coordinates:
                            description: A location based search describing the position in space where the product or service is to be availed.
                            $ref: '#/components/schemas/Coordinates'
                          fulfillment_mode:
                            description: the Buyer's intended means of receiving the goods or services
                            $ref: '#/components/schemas/FulfillmentMode'
                      provider:
                        description: 'Details of the provider that the Buyer wants to order from, including a detailed descriptor for name-based searches.'
                        type: object
                        properties:
                          descriptor:
                            type: object
                            properties:
                              name:
                                description: 'The name of the provider, allowing for specific provider level search queries like ''Bob''s Pizza''.'
                                type: string
                              id:
                                $ref: '#/components/schemas/Provider/properties/id'
                      merchant_category_codes:
                        type: array
                        items:
                          $ref: '#/components/schemas/MerchantCategoryCode'
                        description: Array of merchant category codes
                      item:
                        description: 'Details of the item that the Buyer wants to order, including a detailed descriptor for name-based searches.'
                        type: object
                        properties:
                          descriptor:
                            type: object
                            properties:
                              name:
                                description: 'The name of the item, allowing for specific item level search queries like ''Bread and Milk''.'
                                type: string
                              id:
                                $ref: '#/components/schemas/CatalogItem/properties/id'
                      cuisine_types:
                        description: Details of the cuisine types that the Buyer wants to avail.
                        type: array
                        items:
                          description: 'The network defined array of strings, i.e., Burger, Pizza'
                          type: string
                      fulfillment_modes:
                        description: The modes of fulfillment that the Buyer is interested in
                        type: array
                        items:
                          $ref: '#/components/schemas/FulfillmentMode'
                    required:
                      - intent
            required:
              - action
              - message
              - callback_reference
              - bsn_parameters
    OnSearch:
      description: a PSN's response to a Buyer's search request
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - ON_SEARCH
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              psn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  providers:
                    title: Provider List
                    description: |
                      - The providers that a Provider Supporting Node represents. Typically sent in response to a search query from a Buyer Supporting Node. It encompasses payment terms, and fulfillment options the Provider Supporting Node supports. A ttl can be provided, indicating how long the Buyer Supporting Node is permitted to cache and utilize the provider list. - The PSN must respond with a list of providers, the level of detail that the response contains is up to the PSN. If the BSN requires more information about a provider, they can trigger another research for the specific provider targeted at the PSN.
                    type: object
                    properties:
                      descriptor:
                        description: A comprehensive description of the provider catalog.
                        $ref: '#/components/schemas/Descriptor'
                      fulfillment_modes:
                        description: 'Modes of fulfillment directly supported by the PSN, subject to provider-specific overrides.'
                        type: array
                        items:
                          $ref: '#/components/schemas/FulfillmentMode'
                      providers:
                        description: 'A list of providers managed by the PSN, detailing their offerings.'
                        type: array
                        items:
                          $ref: '#/components/schemas/Provider'
                      expiration_time:
                        description: Expiry timestamp indicating when the provider list becomes obsolete.
                        type: string
                        format: date-time
                      time_to_live:
                        description: Time in seconds before the provider list should be refreshed.
                        type: integer
                required:
                  - providers
            required:
              - action
              - message
              - callback_reference
              - psn_parameters
    Select:
      description: a <code>Buyer<code>'s item selections
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - SELECT
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              bsn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  provider_id:
                    description: the unique identifier of the <code>Provider</code> that the <code>Buyer</code> is selecting items from
                    $ref: '#/components/schemas/Provider/properties/id'
                  fulfillment_intent:
                    description: 'Represents the action of a <code>Buyer</code> to update fulfillment specifications such as time, mode, and location.'
                    type: object
                    properties:
                      buyer_details:
                        description: The details about the buyer
                        $ref: '#/components/schemas/Buyer'
                      fulfillment_mode:
                        description: should be one of the available fulfillment modes
                        $ref: '#/components/schemas/FulfillmentMode'
                      order_notes:
                        description: 'A note that''s associated with the cart. For example, a note for a merchant from a buyer about a specific request with their order.'
                        type: string
                      fulfillment_time:
                        type: integer
                        format: date-time
                    required:
                      - buyer_details
                      - fulfillment_mode
                  catalog_items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: the <code>CatalogItemId</code> from the <code>CatalogItem</code> selection
                          $ref: '#/components/schemas/CatalogItem/properties/id'
                        quantity:
                          type: integer
                          description: The quantity of the selection
                          format: int32
                        special_instructions:
                          description: special instructions for the selected item
                          type: string
                        catalog_item_modifiers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                $ref: '#/components/schemas/CatalogItemModifier/properties/id'
                              quantity:
                                type: integer
                                description: The quantity of the selections for the modifier
                                format: int32
                            required:
                              - id
                              - quantity
                      required:
                        - id
                        - quantity
                  required:
                    - provider_id
                    - selected_fulfillment_mode
                    - catalog_items
                    - buyer_location
            required:
              - action
              - message
              - callback_reference
              - bsn_parameters
    OnSelect:
      description: a <code>Buyer<code>'s cart object
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - ON_SELECT
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              psn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  cart:
                    $ref: '#/components/schemas/Cart'
                  fulfillment_term:
                    $ref: '#/components/schemas/FulfillmentTerm'
                required:
                  - cart
                  - fulfillment_term
            required:
              - action
              - message
              - callback_reference
              - psn_parameters
    Init:
      description: a <code>Buyer<code>'s information to initialize the Cart.
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - INITIALIZE
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              bsn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  cart_id:
                    $ref: '#/components/schemas/Cart/properties/id'
                  fulfillment_intent:
                    description: 'Represents the action of a <code>Buyer</code> to update fulfillment specifications such as time, mode, and location.'
                    type: object
                    properties:
                      buyer_details:
                        description: The details about the buyer
                        $ref: '#/components/schemas/Buyer'
                      fulfillment_mode:
                        $ref: '#/components/schemas/FulfillmentMode'
                      order_notes:
                        description: 'A note that''s associated with the cart. For example, a note for a merchant from a buyer about a specific request with their order.'
                        type: string
                      fulfillment_time:
                        type: integer
                        format: date-time
                    required:
                      - buyer_details
                      - fulfillment_mode
                required:
                  - cart_id
                  - fulfillment_intent
            required:
              - action
              - message
              - callback_reference
              - bsn_parameters
    OnInit:
      description: 'a <code>Buyer<code>''s cart and the required payment, cancellation, fulfillment and refund terms that must be met to successfully fulfill this order.'
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - ON_INIT
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              psn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  cart:
                    $ref: '#/components/schemas/Cart'
                  terms:
                    $ref: '#/components/schemas/Terms'
                required:
                  - cart
                  - terms
            required:
              - action
              - message
              - callback_reference
              - psn_parameters
    Status:
      description: A <code>Buyer</code>'s status request for an Order
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - STATUS
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              bsn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  order_id:
                    $ref: '#/components/schemas/Order/properties/id'
                required:
                  - order_id
            required:
              - action
              - message
              - callback_reference
              - bsn_parameters
    OnStatus:
      description: The updated Order.
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - ON_STATUS
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              psn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/Order'
                required:
                  - order
            required:
              - action
              - message
              - callback_reference
              - psn_parameters
    Cancel:
      $ref: '#/components/requestBodies/Status'
    OnCancel:
      description: The updated Order.
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                enum:
                  - ON_CANCEL
              callback_reference:
                description: the reference identifiers used during a buyer <> provider transaction lifecycle to connect the requests over multiple network requests and callback cycles.
                type: object
                properties:
                  transaction_id:
                    description: a unique id representing the session of a Buyer. Used across all communications throughout a Buyer's transaction lifecycle
                    type: string
                  message_id:
                    description: generated by the <code>BSN</code> - a unique id representing a specific request/callback cycle
                    type: string
                required:
                  - transaction_id
                  - message_id
              psn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/Order/properties/id'
                required:
                  - order
            required:
              - action
              - message
              - callback_reference
              - psn_parameters
  responses:
    PSNResponse:
      description: Acknowledgement of message received by the BSN after successful validation of schema and signature
      content:
        application/json:
          schema:
            type: object
            properties:
              psn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  ack:
                    $ref: '#/components/schemas/Ack'
                required:
                  - ack
              error:
                $ref: '#/components/schemas/Error'
            required:
              - psn_parameters
              - message
    BSNResponse:
      description: Acknowledgement of message received by the BSN after successful validation of schema and signature
      content:
        application/json:
          schema:
            type: object
            properties:
              bsn_parameters:
                type: object
                properties:
                  uid:
                    $ref: '#/components/schemas/Node/properties/uid'
                  name:
                    $ref: '#/components/schemas/Node/properties/name'
                  callback_url:
                    $ref: '#/components/schemas/Node/properties/callback_url'
                required:
                  - uid
                  - name
                  - callback_url
              message:
                type: object
                properties:
                  ack:
                    $ref: '#/components/schemas/Ack'
                required:
                  - ack
              error:
                $ref: '#/components/schemas/Error'
            required:
              - message
              - bsn_parameters
  headers:
    Signature:
      schema:
        type: string
        description: 'Signature keyId="{registry_node_id}",algorithm="ecdsa-p256-keccak256",created="1606970629",expires="1607030629",headers="(created) (expires) digest",signature="Base64url(secp256k1(signing string))"'
